[{"path":[]},{"path":"https://sloop.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://sloop.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://sloop.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://sloop.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://sloop.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://sloop.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://sloop.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://sloop.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://sloop.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://sloop.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://sloop.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://sloop.r-lib.org/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hadley Wickham. Author, maintainer. . Copyright holder, funder.","code":""},{"path":"https://sloop.r-lib.org/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wickham H (2023). sloop: Helpers 'OOP' R. https://github.com/r-lib/sloop, https://sloop.r-lib.org.","code":"@Manual{,   title = {sloop: Helpers for 'OOP' in R},   author = {Hadley Wickham},   year = {2023},   note = {https://github.com/r-lib/sloop, https://sloop.r-lib.org}, }"},{"path":"https://sloop.r-lib.org/dev/index.html","id":"sloop-","dir":"","previous_headings":"","what":"Helpers for OOP in R","title":"Helpers for OOP in R","text":"goal sloop provide tools help interactively explore understand object oriented programming R, particularly S3. Please note unlike r-lib packages, sloop works R 3.3 later.","code":""},{"path":"https://sloop.r-lib.org/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Helpers for OOP in R","text":"can install sloop github :","code":"# install.packages(\"pak\") pak::pak(\"r-lib/sloop\")"},{"path":"https://sloop.r-lib.org/dev/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Helpers for OOP in R","text":"sloop provides variety tools understanding S3 works. useful probably s3_dispatch(). Given function call, shows set methods considered, found, actually called: best ability covers details S3 method dispatch including group generics, internal generics, implicit classes, use NextMethod() (indicated ->): also provides tools determing type function object ’re dealing : retrieving methods associated generic class:","code":"library(sloop) s3_dispatch(print(Sys.time())) #> => print.POSIXct #>    print.POSIXt #>  * print.default # Implicit class x <- matrix(1:6, nrow = 2) s3_dispatch(print(x)) #>    print.matrix #>    print.integer #>    print.numeric #> => print.default  # Internal generic  length.numeric <- function(x) 10 s3_dispatch(length(x)) #>    length.matrix #>    length.integer #>  * length.numeric #>    length.default #> => length (internal)  s3_dispatch(length(structure(x, class = \"numeric\"))) #> => length.numeric #>    length.default #>  * length (internal)  # NextMethod s3_dispatch(Sys.Date()[1]) #> => [.Date #>    [.default #> -> [ (internal)  # group generic + NextMethod() s3_dispatch(sum(Sys.Date())) #>    sum.Date #>    sum.default #> => Summary.Date #>    Summary.default #> -> sum (internal) ftype(t) #> [1] \"S3\"      \"generic\" ftype(t.test) #> [1] \"S3\"      \"generic\" ftype(t.data.frame) #> [1] \"S3\"     \"method\"  otype(1:10) #> [1] \"base\" otype(mtcars) #> [1] \"S3\" otype(R6::R6Class()$new()) #> [1] \"R6\" s3_methods_class(\"factor\") #> # A tibble: 28 × 4 #>    generic       class  visible source #>    <chr>         <chr>  <lgl>   <chr>  #>  1 [             factor TRUE    base   #>  2 [[            factor TRUE    base   #>  3 [[<-          factor TRUE    base   #>  4 [<-           factor TRUE    base   #>  5 all.equal     factor TRUE    base   #>  6 as.character  factor TRUE    base   #>  7 as.data.frame factor TRUE    base   #>  8 as.Date       factor TRUE    base   #>  9 as.list       factor TRUE    base   #> 10 as.logical    factor TRUE    base   #> # ℹ 18 more rows  s3_methods_generic(\"summary\") #> # A tibble: 39 × 4 #>    generic class                 visible source              #>    <chr>   <chr>                 <lgl>   <chr>               #>  1 summary aov                   TRUE    stats               #>  2 summary aovlist               FALSE   registered S3method #>  3 summary aspell                FALSE   registered S3method #>  4 summary check_packages_in_dir FALSE   registered S3method #>  5 summary connection            TRUE    base                #>  6 summary data.frame            TRUE    base                #>  7 summary Date                  TRUE    base                #>  8 summary default               TRUE    base                #>  9 summary ecdf                  FALSE   registered S3method #> 10 summary factor                TRUE    base                #> # ℹ 29 more rows"},{"path":"https://sloop.r-lib.org/dev/reference/ftype.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine function type. — ftype","title":"Determine function type. — ftype","text":"function figures whether input function regular/primitive/internal function, internal/S3/S4 generic, S3/S4/RC method. function slightly simplified possible method one class generic another class, seems like bad idea hopefully one done .","code":""},{"path":"https://sloop.r-lib.org/dev/reference/ftype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine function type. — ftype","text":"","code":"ftype(f)"},{"path":"https://sloop.r-lib.org/dev/reference/ftype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine function type. — ftype","text":"f unquoted function name","code":""},{"path":"https://sloop.r-lib.org/dev/reference/ftype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine function type. — ftype","text":"character vector length 1 2.","code":""},{"path":"https://sloop.r-lib.org/dev/reference/ftype.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine function type. — ftype","text":"","code":"ftype(`%in%`) #> [1] \"function\" ftype(sum) #> [1] \"primitive\" \"generic\"   ftype(t.data.frame) #> [1] \"S3\"     \"method\" ftype(t.test) # Tricky! #> [1] \"S3\"      \"generic\" ftype(writeLines) #> [1] \"internal\" ftype(unlist) #> [1] \"internal\" \"generic\""},{"path":"https://sloop.r-lib.org/dev/reference/is_s3_generic.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if a function is an S3 generic or S3 method. — is_s3_generic","title":"Determine if a function is an S3 generic or S3 method. — is_s3_generic","text":"is_s3_generic() compares name checks internal regular generics. is_s3_method() builds names possible generics function checks actually generic.","code":""},{"path":"https://sloop.r-lib.org/dev/reference/is_s3_generic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if a function is an S3 generic or S3 method. — is_s3_generic","text":"","code":"is_s3_generic(fname, env = parent.frame())  is_s3_method(fname, env = parent.frame())"},{"path":"https://sloop.r-lib.org/dev/reference/is_s3_generic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if a function is an S3 generic or S3 method. — is_s3_generic","text":"fname Name function string. Need name function impossible determine whether function S3 method based contents. env Environment search .","code":""},{"path":"https://sloop.r-lib.org/dev/reference/is_s3_generic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine if a function is an S3 generic or S3 method. — is_s3_generic","text":"","code":"is_s3_generic(\"mean\") #> [1] TRUE is_s3_generic(\"sum\") #> [1] TRUE is_s3_generic(\"[[\") #> [1] TRUE is_s3_generic(\"unlist\") #> [1] TRUE is_s3_generic(\"runif\") #> [1] FALSE  is_s3_method(\"t.data.frame\") #> [1] TRUE is_s3_method(\"t.test\") # Just tricking! #> [1] FALSE is_s3_method(\"as.data.frame\") #> [1] FALSE is_s3_method(\"mean.Date\") #> [1] TRUE"},{"path":"https://sloop.r-lib.org/dev/reference/otype.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the type of an object — otype","title":"Determine the type of an object — otype","text":"Tells dealing base, S3, S4, RC, R6 object.","code":""},{"path":"https://sloop.r-lib.org/dev/reference/otype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the type of an object — otype","text":"","code":"otype(x)"},{"path":"https://sloop.r-lib.org/dev/reference/otype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the type of an object — otype","text":"x object","code":""},{"path":"https://sloop.r-lib.org/dev/reference/otype.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine the type of an object — otype","text":"","code":"otype(1:10) #> [1] \"base\" otype(mtcars) #> [1] \"S3\""},{"path":"https://sloop.r-lib.org/dev/reference/s3_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the S3 class of an object — s3_class","title":"Compute the S3 class of an object — s3_class","text":"Compared class(), always returns class vector used dispatch. important objects class attribute set.","code":""},{"path":"https://sloop.r-lib.org/dev/reference/s3_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the S3 class of an object — s3_class","text":"","code":"s3_class(x)"},{"path":"https://sloop.r-lib.org/dev/reference/s3_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the S3 class of an object — s3_class","text":"x primitive type","code":""},{"path":"https://sloop.r-lib.org/dev/reference/s3_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the S3 class of an object — s3_class","text":"","code":"s3_class(NULL) #> [1] \"NULL\"  s3_class(logical()) #> [1] \"logical\" s3_class(integer()) #> [1] \"integer\" \"numeric\" s3_class(numeric()) #> [1] \"double\"  \"numeric\" s3_class(character()) #> [1] \"character\"  s3_class(matrix()) #> [1] \"matrix\"  \"logical\" s3_class(matrix(1)) #> [1] \"matrix\"  \"double\"  \"numeric\"  s3_class(array()) #> [1] \"array\"   \"logical\" s3_class(array(1)) #> [1] \"array\"   \"double\"  \"numeric\""},{"path":"https://sloop.r-lib.org/dev/reference/s3_dispatch.html","id":null,"dir":"Reference","previous_headings":"","what":"Illustrate S3 dispatch — s3_dispatch","title":"Illustrate S3 dispatch — s3_dispatch","text":"s3_dispatch() prints list possible function names considered method dispatch. four possible states: => method exists found UseMethod(). -> method exists used NextMethod(). * method exists used. Nothing (greyed console): method exist. Learn https://adv-r.hadley.nz/s3.html.","code":""},{"path":"https://sloop.r-lib.org/dev/reference/s3_dispatch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Illustrate S3 dispatch — s3_dispatch","text":"","code":"s3_dispatch(call, env = parent.frame())"},{"path":"https://sloop.r-lib.org/dev/reference/s3_dispatch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Illustrate S3 dispatch — s3_dispatch","text":"call Example call S3 method env Environment evaluate call","code":""},{"path":"https://sloop.r-lib.org/dev/reference/s3_dispatch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Illustrate S3 dispatch — s3_dispatch","text":"","code":"x <- Sys.time() s3_dispatch(print(x)) #> => print.POSIXct #>    print.POSIXt #>  * print.default s3_dispatch(is.numeric(x)) #>    is.numeric.POSIXct #> => is.numeric.POSIXt #>    is.numeric.default #>  * is.numeric (internal) s3_dispatch(as.Date(x)) #> => as.Date.POSIXct #>    as.Date.POSIXt #>  * as.Date.default s3_dispatch(sum(x)) #>    sum.POSIXct #>    sum.POSIXt #>    sum.default #> => Summary.POSIXct #>    Summary.POSIXt #>    Summary.default #> -> sum (internal)  # Internal vs. regular generic x1 <- 1 x2 <- structure(2, class = \"double\")  my_length <- function(x) UseMethod(\"my_length\") s3_dispatch(my_length(x1)) #>    my_length.double #>    my_length.numeric #>    my_length.default s3_dispatch(my_length(x2)) #>    my_length.double #>    my_length.default  length.double <- function(x) 10 s3_dispatch(length(x1)) #>  * length.double #>    length.numeric #>    length.default #> => length (internal) s3_dispatch(length(x2)) #> => length.double #>    length.default #>  * length (internal)"},{"path":"https://sloop.r-lib.org/dev/reference/s3_get_method.html","id":null,"dir":"Reference","previous_headings":"","what":"Find S3 method from its name — s3_get_method","title":"Find S3 method from its name — s3_get_method","text":"Find S3 method name","code":""},{"path":"https://sloop.r-lib.org/dev/reference/s3_get_method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find S3 method from its name — s3_get_method","text":"","code":"s3_get_method(name)"},{"path":"https://sloop.r-lib.org/dev/reference/s3_get_method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find S3 method from its name — s3_get_method","text":"name string unquoted symbol","code":""},{"path":"https://sloop.r-lib.org/dev/reference/s3_get_method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find S3 method from its name — s3_get_method","text":"function, error stating method found","code":""},{"path":"https://sloop.r-lib.org/dev/reference/s3_get_method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find S3 method from its name — s3_get_method","text":"","code":"s3_get_method(mean.Date) #> function (x, ...)  #> .Date(mean(unclass(x), ...)) #> <bytecode: 0x55b664c3aca0> #> <environment: namespace:base> s3_get_method(weighted.mean.Date) #> function (x, w, ...)  #> .Date(weighted.mean(unclass(x), w, ...)) #> <bytecode: 0x55b664d64c80> #> <environment: namespace:stats>"},{"path":"https://sloop.r-lib.org/dev/reference/s3_methods_class.html","id":null,"dir":"Reference","previous_headings":"","what":"List methods for a S3 or S4 generic (or class) — s3_methods_class","title":"List methods for a S3 or S4 generic (or class) — s3_methods_class","text":"Returns information methods belong generic class. S3 S4, methods belong generic, often useful see generics provided methods given class. wrappers around utils::methods(), returns lot useful information attribute.","code":""},{"path":"https://sloop.r-lib.org/dev/reference/s3_methods_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List methods for a S3 or S4 generic (or class) — s3_methods_class","text":"","code":"s3_methods_class(x)  s3_methods_generic(x)  s4_methods_class(x)  s4_methods_generic(x)"},{"path":"https://sloop.r-lib.org/dev/reference/s3_methods_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List methods for a S3 or S4 generic (or class) — s3_methods_class","text":"x Name class generic","code":""},{"path":"https://sloop.r-lib.org/dev/reference/s3_methods_class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List methods for a S3 or S4 generic (or class) — s3_methods_class","text":"tibble columns generic, visible, class, visible, source.","code":""},{"path":"https://sloop.r-lib.org/dev/reference/s3_methods_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List methods for a S3 or S4 generic (or class) — s3_methods_class","text":"","code":"s3_methods_class(\"Date\") #> # A tibble: 37 × 4 #>    generic    class visible source              #>    <chr>      <chr> <lgl>   <chr>               #>  1 +          Date  TRUE    base                #>  2 -          Date  TRUE    base                #>  3 Axis       Date  FALSE   registered S3method #>  4 Math       Date  TRUE    base                #>  5 Ops        Date  TRUE    base                #>  6 Summary    Date  TRUE    base                #>  7 [          Date  TRUE    base                #>  8 [<-        Date  TRUE    base                #>  9 [[         Date  TRUE    base                #> 10 as.POSIXct Date  TRUE    base                #> # ℹ 27 more rows s3_methods_generic(\"anova\") #> # A tibble: 8 × 4 #>   generic class   visible source              #>   <chr>   <chr>   <lgl>   <chr>               #> 1 anova   glm     FALSE   registered S3method #> 2 anova   glmlist FALSE   registered S3method #> 3 anova   lm      FALSE   registered S3method #> 4 anova   lmlist  FALSE   registered S3method #> 5 anova   loess   FALSE   registered S3method #> 6 anova   mlm     FALSE   registered S3method #> 7 anova   mlmlist FALSE   registered S3method #> 8 anova   nls     FALSE   registered S3method  s4_methods_class(\"Date\") #> # A tibble: 4 × 4 #>   generic     class visible source #>   <chr>       <chr> <lgl>   <chr>  #> 1 coerce      Date  TRUE    \"\"     #> 2 initialize  Date  TRUE    \"\"     #> 3 show        Date  TRUE    \"\"     #> 4 slotsFromS3 Date  TRUE    \"\"     s4_methods_generic(\"anova\") #> # A tibble: 0 × 4 #> # ℹ 4 variables: generic <chr>, class <chr>, visible <lgl>, source <chr>"},{"path":"https://sloop.r-lib.org/dev/reference/sloop-package.html","id":null,"dir":"Reference","previous_headings":"","what":"sloop: Helpers for 'OOP' in R — sloop-package","title":"sloop: Helpers for 'OOP' in R — sloop-package","text":"collection helper functions designed help better understand object oriented programming R, particularly using 'S3'.","code":""},{"path":[]},{"path":"https://sloop.r-lib.org/dev/reference/sloop-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"sloop: Helpers for 'OOP' in R — sloop-package","text":"Maintainer: Hadley Wickham hadley@posit.co contributors: Posit Software, PBC [copyright holder, funder]","code":""},{"path":[]},{"path":"https://sloop.r-lib.org/dev/news/index.html","id":"sloop-101","dir":"Changelog","previous_headings":"","what":"sloop 1.0.1","title":"sloop 1.0.1","text":"CRAN release: 2019-02-17 sloop website: http://sloop.r-lib.org/ ! s3_methods_generic() returns correct character class recent versions tibble package (#19) s4_methods_class() returns 0 rows instead error methods found (#18).","code":""}]
