[{"path":"https://sloop.r-lib.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hadley Wickham. Author, maintainer. . Copyright holder, funder.","code":""},{"path":"https://sloop.r-lib.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wickham H (2023). sloop: Helpers 'OOP' R. https://github.com/r-lib/sloop, https://sloop.r-lib.org.","code":"@Manual{,   title = {sloop: Helpers for 'OOP' in R},   author = {Hadley Wickham},   year = {2023},   note = {https://github.com/r-lib/sloop, https://sloop.r-lib.org}, }"},{"path":"https://sloop.r-lib.org/index.html","id":"sloop","dir":"","previous_headings":"","what":"Helpers for OOP in R","title":"Helpers for OOP in R","text":"goal sloop provide tools help interactively explore understand object oriented programming R, particularly S3. Please note unlike r-lib packages, sloop works R 3.3 later.","code":""},{"path":"https://sloop.r-lib.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Helpers for OOP in R","text":"can install sloop github :","code":"# install.packages(\"devtools\") devtools::install_github(\"r-lib/sloop\")"},{"path":"https://sloop.r-lib.org/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Helpers for OOP in R","text":"sloop provides variety tools understanding S3 works. useful probably s3_dispatch(). Given function call, shows set methods considered, found, actually called: best ability covers details S3 method dispatch including group generics, internal generics, implicit classes, use NextMethod() (indicated ->): also provides tools determing type function object ’re dealing : retrieving methods associated generic class:","code":"library(sloop) s3_dispatch(print(Sys.time())) #> => print.POSIXct #>    print.POSIXt #>  * print.default # Implicit class x <- matrix(1:6, nrow = 2) s3_dispatch(print(x)) #>    print.matrix #>    print.integer #>    print.numeric #> => print.default  # Internal generic  length.numeric <- function(x) 10 s3_dispatch(length(x)) #>    length.matrix #>    length.integer #>  * length.numeric #>    length.default #> => length (internal)  s3_dispatch(length(structure(x, class = \"numeric\"))) #> => length.numeric #>    length.default #>  * length (internal)  # NextMethod s3_dispatch(Sys.Date()[1]) #> => [.Date #>    [.default #> -> [ (internal)  # group generic + NextMethod() s3_dispatch(sum(Sys.Date())) #>    sum.Date #>    sum.default #> => Summary.Date #>    Summary.default #> -> sum (internal) ftype(t) #> [1] \"S3\"      \"generic\" ftype(t.test) #> [1] \"S3\"      \"generic\" ftype(t.data.frame) #> [1] \"S3\"     \"method\"  otype(1:10) #> [1] \"base\" otype(mtcars) #> [1] \"S3\" otype(R6::R6Class()$new()) #> [1] \"R6\" s3_methods_class(\"factor\") #> # A tibble: 27 x 4 #>    generic       class  visible source #>    <chr>         <chr>  <lgl>   <chr>  #>  1 [             factor TRUE    base   #>  2 [[            factor TRUE    base   #>  3 [[<-          factor TRUE    base   #>  4 [<-           factor TRUE    base   #>  5 all.equal     factor TRUE    base   #>  6 as.character  factor TRUE    base   #>  7 as.data.frame factor TRUE    base   #>  8 as.Date       factor TRUE    base   #>  9 as.list       factor TRUE    base   #> 10 as.logical    factor TRUE    base   #> # … with 17 more rows  s3_methods_generic(\"summary\") #> # A tibble: 36 x 4 #>    generic class                 visible source              #>    <chr>   <chr>                 <lgl>   <chr>               #>  1 summary aov                   TRUE    stats               #>  2 summary aovlist               FALSE   registered S3method #>  3 summary aspell                FALSE   registered S3method #>  4 summary check_packages_in_dir FALSE   registered S3method #>  5 summary connection            TRUE    base                #>  6 summary data.frame            TRUE    base                #>  7 summary Date                  TRUE    base                #>  8 summary default               TRUE    base                #>  9 summary ecdf                  FALSE   registered S3method #> 10 summary factor                TRUE    base                #> # … with 26 more rows"},{"path":"https://sloop.r-lib.org/reference/ftype.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine function type. — ftype","title":"Determine function type. — ftype","text":"function figures whether input function regular/primitive/internal function, internal/S3/S4 generic, S3/S4/RC method. function slightly simplified possible method one class generic another class, seems like bad idea hopefully one done .","code":""},{"path":"https://sloop.r-lib.org/reference/ftype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine function type. — ftype","text":"","code":"ftype(f)"},{"path":"https://sloop.r-lib.org/reference/ftype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine function type. — ftype","text":"f unquoted function name","code":""},{"path":"https://sloop.r-lib.org/reference/ftype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine function type. — ftype","text":"character vector length 1 2.","code":""},{"path":"https://sloop.r-lib.org/reference/ftype.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine function type. — ftype","text":"","code":"ftype(`%in%`) #> [1] \"function\" ftype(sum) #> [1] \"primitive\" \"generic\"   ftype(t.data.frame) #> [1] \"S3\"     \"method\" ftype(t.test) # Tricky! #> [1] \"S3\"      \"generic\" ftype(writeLines) #> [1] \"internal\" ftype(unlist) #> [1] \"internal\" \"generic\""},{"path":"https://sloop.r-lib.org/reference/is_s3_generic.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if a function is an S3 generic or S3 method. — is_s3_generic","title":"Determine if a function is an S3 generic or S3 method. — is_s3_generic","text":"is_s3_generic() compares name checks internal regular generics. is_s3_method() builds names possible generics function checks actually generic.","code":""},{"path":"https://sloop.r-lib.org/reference/is_s3_generic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if a function is an S3 generic or S3 method. — is_s3_generic","text":"","code":"is_s3_generic(fname, env = parent.frame())  is_s3_method(fname, env = parent.frame())"},{"path":"https://sloop.r-lib.org/reference/is_s3_generic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if a function is an S3 generic or S3 method. — is_s3_generic","text":"fname Name function string. Need name function impossible determine whether function S3 method based contents. env Environment search .","code":""},{"path":"https://sloop.r-lib.org/reference/is_s3_generic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine if a function is an S3 generic or S3 method. — is_s3_generic","text":"","code":"is_s3_generic(\"mean\") #> [1] TRUE is_s3_generic(\"sum\") #> [1] TRUE is_s3_generic(\"[[\") #> [1] TRUE is_s3_generic(\"unlist\") #> [1] TRUE is_s3_generic(\"runif\") #> [1] FALSE  is_s3_method(\"t.data.frame\") #> [1] TRUE is_s3_method(\"t.test\") # Just tricking! #> [1] FALSE is_s3_method(\"as.data.frame\") #> [1] FALSE is_s3_method(\"mean.Date\") #> [1] TRUE"},{"path":"https://sloop.r-lib.org/reference/otype.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the type of an object — otype","title":"Determine the type of an object — otype","text":"Tells dealing base, S3, S4, RC, R6 object.","code":""},{"path":"https://sloop.r-lib.org/reference/otype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the type of an object — otype","text":"","code":"otype(x)"},{"path":"https://sloop.r-lib.org/reference/otype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the type of an object — otype","text":"x object","code":""},{"path":"https://sloop.r-lib.org/reference/otype.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine the type of an object — otype","text":"","code":"otype(1:10) #> [1] \"base\" otype(mtcars) #> [1] \"S3\""},{"path":"https://sloop.r-lib.org/reference/s3_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the S3 class of an object — s3_class","title":"Compute the S3 class of an object — s3_class","text":"Compared class(), always returns class vector used dispatch. important objects class attribute set.","code":""},{"path":"https://sloop.r-lib.org/reference/s3_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the S3 class of an object — s3_class","text":"","code":"s3_class(x)"},{"path":"https://sloop.r-lib.org/reference/s3_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the S3 class of an object — s3_class","text":"x primitive type","code":""},{"path":"https://sloop.r-lib.org/reference/s3_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the S3 class of an object — s3_class","text":"","code":"s3_class(NULL) #> [1] \"NULL\"  s3_class(logical()) #> [1] \"logical\" s3_class(integer()) #> [1] \"integer\" \"numeric\" s3_class(numeric()) #> [1] \"double\"  \"numeric\" s3_class(character()) #> [1] \"character\"  s3_class(matrix()) #> [1] \"matrix\"  \"logical\" s3_class(matrix(1)) #> [1] \"matrix\"  \"double\"  \"numeric\"  s3_class(array()) #> [1] \"array\"   \"logical\" s3_class(array(1)) #> [1] \"array\"   \"double\"  \"numeric\""},{"path":"https://sloop.r-lib.org/reference/s3_dispatch.html","id":null,"dir":"Reference","previous_headings":"","what":"Illustrate S3 dispatch — s3_dispatch","title":"Illustrate S3 dispatch — s3_dispatch","text":"s3_dispatch() prints list possible function names considered method dispatch. four possible states: => method exists found UseMethod(). -> method exists used NextMethod(). * method exists used. Nothing (greyed console): method exist. Learn https://adv-r.hadley.nz/s3.html.","code":""},{"path":"https://sloop.r-lib.org/reference/s3_dispatch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Illustrate S3 dispatch — s3_dispatch","text":"","code":"s3_dispatch(call, env = parent.frame())"},{"path":"https://sloop.r-lib.org/reference/s3_dispatch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Illustrate S3 dispatch — s3_dispatch","text":"call Example call S3 method env Environment evaluate call","code":""},{"path":"https://sloop.r-lib.org/reference/s3_dispatch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Illustrate S3 dispatch — s3_dispatch","text":"","code":"x <- Sys.time() s3_dispatch(print(x)) #> => print.POSIXct #>    print.POSIXt #>  * print.default s3_dispatch(is.numeric(x)) #>    is.numeric.POSIXct #> => is.numeric.POSIXt #>    is.numeric.default #>  * is.numeric (internal) s3_dispatch(as.Date(x)) #> => as.Date.POSIXct #>    as.Date.POSIXt #>  * as.Date.default s3_dispatch(sum(x)) #>    sum.POSIXct #>    sum.POSIXt #>    sum.default #> => Summary.POSIXct #>    Summary.POSIXt #>    Summary.default #> -> sum (internal)  # Internal vs. regular generic x1 <- 1 x2 <- structure(2, class = \"double\")  my_length <- function(x) UseMethod(\"my_length\") s3_dispatch(my_length(x1)) #>    my_length.double #>    my_length.numeric #>    my_length.default s3_dispatch(my_length(x2)) #>    my_length.double #>    my_length.default  length.double <- function(x) 10 s3_dispatch(length(x1)) #>  * length.double #>    length.numeric #>    length.default #> => length (internal) s3_dispatch(length(x2)) #> => length.double #>    length.default #>  * length (internal)"},{"path":"https://sloop.r-lib.org/reference/s3_get_method.html","id":null,"dir":"Reference","previous_headings":"","what":"Find S3 method from its name — s3_get_method","title":"Find S3 method from its name — s3_get_method","text":"Find S3 method name","code":""},{"path":"https://sloop.r-lib.org/reference/s3_get_method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find S3 method from its name — s3_get_method","text":"","code":"s3_get_method(name)"},{"path":"https://sloop.r-lib.org/reference/s3_get_method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find S3 method from its name — s3_get_method","text":"name string unquoted symbol","code":""},{"path":"https://sloop.r-lib.org/reference/s3_get_method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find S3 method from its name — s3_get_method","text":"function, error stating method found","code":""},{"path":"https://sloop.r-lib.org/reference/s3_get_method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find S3 method from its name — s3_get_method","text":"","code":"s3_get_method(mean.Date) #> function (x, ...)  #> .Date(mean(unclass(x), ...)) #> <bytecode: 0x55985d2f9108> #> <environment: namespace:base> s3_get_method(weighted.mean.Date) #> function (x, w, ...)  #> .Date(weighted.mean(unclass(x), w, ...)) #> <bytecode: 0x55985d4b5b20> #> <environment: namespace:stats>"},{"path":"https://sloop.r-lib.org/reference/s3_methods_class.html","id":null,"dir":"Reference","previous_headings":"","what":"List methods for a S3 or S4 generic (or class) — s3_methods_class","title":"List methods for a S3 or S4 generic (or class) — s3_methods_class","text":"Returns information methods belong generic class. S3 S4, methods belong generic, often useful see generics provided methods given class. wrappers around utils::methods(), returns lot useful information attribute.","code":""},{"path":"https://sloop.r-lib.org/reference/s3_methods_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List methods for a S3 or S4 generic (or class) — s3_methods_class","text":"","code":"s3_methods_class(x)  s3_methods_generic(x)  s4_methods_class(x)  s4_methods_generic(x)"},{"path":"https://sloop.r-lib.org/reference/s3_methods_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List methods for a S3 or S4 generic (or class) — s3_methods_class","text":"x Name class generic","code":""},{"path":"https://sloop.r-lib.org/reference/s3_methods_class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List methods for a S3 or S4 generic (or class) — s3_methods_class","text":"tibble columns generic, visible, class, visible, source.","code":""},{"path":"https://sloop.r-lib.org/reference/s3_methods_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List methods for a S3 or S4 generic (or class) — s3_methods_class","text":"","code":"s3_methods_class(\"Date\") #> # A tibble: 37 × 4 #>    generic    class visible source              #>    <chr>      <chr> <lgl>   <chr>               #>  1 +          Date  TRUE    base                #>  2 -          Date  TRUE    base                #>  3 Axis       Date  FALSE   registered S3method #>  4 Math       Date  TRUE    base                #>  5 Ops        Date  TRUE    base                #>  6 Summary    Date  TRUE    base                #>  7 [          Date  TRUE    base                #>  8 [<-        Date  TRUE    base                #>  9 [[         Date  TRUE    base                #> 10 as.POSIXct Date  TRUE    base                #> # ℹ 27 more rows s3_methods_generic(\"anova\") #> # A tibble: 8 × 4 #>   generic class   visible source              #>   <chr>   <chr>   <lgl>   <chr>               #> 1 anova   glm     FALSE   registered S3method #> 2 anova   glmlist FALSE   registered S3method #> 3 anova   lm      FALSE   registered S3method #> 4 anova   lmlist  FALSE   registered S3method #> 5 anova   loess   FALSE   registered S3method #> 6 anova   mlm     FALSE   registered S3method #> 7 anova   mlmlist FALSE   registered S3method #> 8 anova   nls     FALSE   registered S3method  s4_methods_class(\"Date\") #> # A tibble: 4 × 4 #>   generic     class visible source #>   <chr>       <chr> <lgl>   <chr>  #> 1 coerce      Date  TRUE    \"\"     #> 2 initialize  Date  TRUE    \"\"     #> 3 show        Date  TRUE    \"\"     #> 4 slotsFromS3 Date  TRUE    \"\"     s4_methods_generic(\"anova\") #> # A tibble: 0 × 4 #> # ℹ 4 variables: generic <chr>, class <chr>, visible <lgl>, source <chr>"},{"path":"https://sloop.r-lib.org/news/index.html","id":"sloop-101","dir":"Changelog","previous_headings":"","what":"sloop 1.0.1","title":"sloop 1.0.1","text":"CRAN release: 2019-02-17 sloop website: http://sloop.r-lib.org/ ! s3_methods_generic() returns correct character class recent versions tibble package (#19) s4_methods_class() returns 0 rows instead error methods found (#18).","code":""}]
